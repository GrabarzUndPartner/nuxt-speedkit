[{"_path":"/guide/components/speedkit-picture","_dir":"components","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"SpeedkitPicture","description":"The SpeedkitPicture is a picture implementation based on the module @nuxt/image.\nIt uses the provided API $img.","_type":"markdown","_id":"content:3.guide:5.components:speedkit-picture.md","_source":"content","_file":"3.guide/5.components/speedkit-picture.md","_extension":"md"},{"_path":"/guide/components/speedkit-youtube","_dir":"components","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"SpeedkitYoutube","description":"We have integrated SpeedkitYoutube  as an example to show how iFrame content must be integrated in a performance-optimized manner.\nFor this purpose, a separate IntersectionObserver has been implemented, which detects a longer dwell time of the component in the viewport. The iFrame is initialized only after a positive detection. This prevents immense data from having to be loaded when simply scrolling through the page.\nSo that no empty space is visible to the user, we use the functionality of the SpeedkitPicture and preload the corresponding Youtube poster in different renditions, so the illusion is perfect for the user and he does not notice anything of the optimized lazy load procedure.","_type":"markdown","_id":"content:3.guide:5.components:speedkit-youtube.md","_source":"content","_file":"3.guide/5.components/speedkit-youtube.md","_extension":"md"}]